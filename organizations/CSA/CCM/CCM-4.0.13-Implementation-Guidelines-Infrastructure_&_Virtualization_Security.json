[
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Infrastructure and Virtualization Security Policy and Procedures",
        "Control ID": "IVS-01",
        "Control Specification": "Establish, document, approve, communicate, apply, evaluate and maintain\n policies and procedures for infrastructure and virtualization security. Review\n and update the policies and procedures at least annually.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "CSP-Owned",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n The responsibility for this control differs depending upon chosen cloud architecture. For IaaS this is a “Shared (Dependent)” responsibility. While the CSP provides tooling to support the VM lifecycle and policies and procedures around the infrastructure, and policies and procedures around the VMs, the governance and enforcement of such belong to the CSC. For PaaS and SaaS, the CSC is abstracted from the VM layer by consuming either a platform or an application, and all policies and procedures are a CSP-owned responsibility.\n \n Implementation Guidelines.\n IaaS Provider: \n The CSP is responsible for creating policies and procedures around the infrastructure, virtual machines, and cloud orchestration tools that they use to deliver the service. However, it is not responsible for creating policies and procedures governing the VM instances that the CSC brings into or builds within the IaaS environment. The CSP may choose to share example policies and procedures with the CSC, or offer services to help the CSC build these policies and procedures. The CSP should provide capabilities and/or technology to enable the CSC to apply the policies and procedures – for example the ability to create network security controls to separate individual VM instances from one another – but it’s up to the CSC to create the policies and procedures to use these capabilities.\n \n PaaS Provider:\n The CSP is responsible for implementing and governing the policies and procedures relating to virtualization security. The CSC is not expected to interface with the VMs in a PaaS environment in any way other than consuming the development environment which runs on top of the VMs. Therefore, the CSP should build a policy management and enforcement framework to govern the VM lifecycle, storage, and network security of the VM environment. The policies and procedures should be reviewed at least annually, and the approach (but not necessarily the specific policy/procedure detail) may be shared with the customer via the CSP’s website, the CAIQ, and/or as part of an independent auditor’s report.\n \n SaaS Provider:\n The CSP is responsible for implementing and governing the policies and procedures relating to virtualization security. The CSC does not interface with the VMs in a SaaS environment as they are simply consuming an application. Therefore, the CSP should build a policy management and enforcement framework to govern the VM lifecycle, storage, and network security of the VM environment running below the SaaS application. The policies and procedures should be reviewed at least annually, and the approach (but not necessarily the specific policy/procedure detail) may be shared with the customer via the CSP’s website, the CAIQ, and/or as part of an independent auditor’s report.\n \n Policies should include (but not limited to) provisions on the following:\n a. Scope and Objectives: \n i. The scope of the infrastructure and virtualization security policies and to ensure that the policies apply to all relevant components within the cloud environment, including networks, operating systems, and virtual machines\n ii. The security objectives should be well articulated and aligned with industry standards and regulatory requirements applicable to the CSP\n b. Capacity and Resource Planning: Capacity planning requirements and assessments planned to ensure that resources are efficiently allocated, and scalability requirements are met\n c. Network Security: Network security baselines that define acceptable physical and virtual network configurations for network devices, applications, and operating systems. Guidelines for network segmentation, access control, and traffic management should be also defined and regularly reviewed\n d. OS Hardening and Base Controls: Security baseline configurations for all guest/host operating systems (OS), hypervisors, VMs (with VM lifecycle management), including standardized hardening configurations and procedures to apply the latest security patches and updates\n e. Production and Non-Production Environments: Requirements for the separation of production and non-production environments, including relevant access restrictions that are tailored to the specific risks and requirements of each environment\n f. Segmentation and Segregation:\n i. Network physical and/or logical segmentation and segregation requirements to isolate different customer environments (CSP, CSC and intra-tenant) and prevent unauthorized access between them\n ii. Intra-tenant access requirements should be defined and access restricted to authorized users and each tenant's resources and data\n g. Migration to Cloud Environments: Requirements for the establishment of secure channels for data migration to cloud environments using encryption based on secure protocols\n h. Network Architecture Documentation: \n i. An up-to-date documentation of the cloud network architecture including details on network topology, device configurations, data flows and security controls\n ii. Documentation that should be regularly reviewed and updated to reflect changes in the network environment\n i. Network Defense:\n i. A layered defense strategy to protect the cloud infrastructure from various attack vectors\n ii. An up-to-date threat intelligence feed and regular vulnerability assessments and penetration testing conducted to identify and remediate network security weaknesses\n j. Infrastructure and Virtualization Security Metrics: Monitoring metrics and key performance indicators (KPIs) related to infrastructure and virtualization security should be defined, such as resource utilization, network traffic patterns, and security alerts\n k. Approval: Approval requirements and senior management involvement to ensure alignment with the organization's strategic goals and risk appetite\n i. An approval process should be established for any changes or modifications to the policy and procedures\n ii. A documented record of approvals (including dates, names of approvers, and any relevant comments or discussions) should be maintained\n l. Communication: Effective communication of the policy and procedures should be facilitated to all relevant cloud stakeholders\n m. Maintenance and Reviews: Infrastructure and virtualization security policies and procedures should be documented, reviewed and updated at least annually to ensure alignment with evolving cloud security landscape and to reflect changes in cloud technology, regulations, and risks",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n IaaS Customer:\n The CSC has the responsibility to create and govern all policies and procedures relating to VM lifecycle management and security. While the CSP may provide example policies and procedures, it is up to the CSC to interpret and adjust them to be relevant to the environment that is being deployed. Alternatively, the CSC may take existing policies and procedures and adapt these to be applicable in the IaaS environment. The CSP may offer a service capability to support the CSC with the creation of these policies and procedures. The CSC is responsible for the governance of all policies and procedures and is advised to review these on an annual basis and update them appropriately. The CSC is not responsible for policies and procedures relating to the physical and virtual infrastructure that is used to deliver the service – that is the responsibility of the CSP.\n \n PaaS Customer:\n The CSC consumes virtual machines as part of the platform delivered. The CSC is not required to create policies and procedures to govern the lifecycle or security of these VMs and may refer to the CSP’s website, CAIQ and/or independent audit to understand how this is handled.\n \n SaaS Customer:\n The CSC consumes an application and is abstracted from the VMs upon which the application is running. The CSC has no role in the policies and procedures governing the VM environment and may rely on the CSP’s website, CAIQ and/or independent audit to understand how this is handled.\n \n Policies should include (but not limited to) provisions on the following: The policies provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Capacity and Resource Planning",
        "Control ID": "IVS-02",
        "Control Specification": "Plan and monitor the availability, quality, and adequate capacity\n of resources in order to deliver the required system performance as determined\n by the business.",
        "Control Ownership by Service Delivery Model - IaaS": "CSP-Owned",
        "Control Ownership by Service Delivery Model - PaaS": "CSP-Owned",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n The responsibility for this control is the same across all cloud architectures, and is a CSP-owned responsibility. While a CSC may demand a particular service or resource capacity, it is the responsibility of the CSP to ensure that the required system performance is delivered according to these requirements. This applies equally whether the service being delivered is IaaS, PaaS, or SaaS.\n \n Implementation Guidelines.\n Applicable to all service models:\n The CSP should develop and maintain a resource planning framework to assess the usage of the infrastructure, platform, or application that is being delivered to the CSC. The framework should be reviewed regularly and be used by the planning, engineering, and infrastructure teams to determine if the required growth of the service meets the CSC demands. The CSP should also maintain an internal operational level agreement (OLA) and SLA with the CSC, which may include service penalties for situations where the CSP is unable to deliver capacity and availability.\n \n Metrics should be leveraged and monitored to establish a resources capacity planning model along with the SLAs that have been determined with the internal teams, and the SLAs that are being promised to the CSC. A regular review cycle should be adopted to ensure that the planning team is able to react swiftly to required resources capacity changes.\n \n Implementation best practices for the CSP include (but are not limited to):\n a. Resource Planning Framework:\n i. The business objectives, user expectations, and performance requirements should be understood for the various cloud services\n ii. Strategies should be developed for allocating resources across different cloud services, considering factors like cost optimization, performance optimization, and scalability needs\n iii. Historical usage patterns, future growth projections, and peak demand scenarios should be analyzed to determine the appropriate resource capacity for each service\n iv. Annual reviews of resource utilization trends and projections should be performed to identify potential bottlenecks and optimize infrastructure\n b. Resource Monitoring and Alerting Systems:\n i. Resource utilization metrics like CPU, memory, storage, and network bandwidth should be continuously tracked to identify potential bottlenecks or resource constraints\n ii. Unusual VM creation times, resource spikes, or sudden changes in allocated resources should be monitored to detect unauthorized activity or resource-intensive attacks\n iii. Baseline performance levels should be determined for each critical metric to identify deviations and potential issues proactively\n iv. Automated alerts should be configured to notify the relevant teams when resource utilization exceeds thresholds or performance degrades significantly\n c. Autoscaling and Resource Optimization Techniques: \n i. Resource optimization techniques like load balancing, virtual machine consolidation, and instance termination should be employed to maximize resource utilization and minimize idle resources\n ii. Autoscaling features should be utilized to automatically adjust resource capacity in real-time based on demand fluctuations, ensuring optimal performance and cost efficiency\n d. Continuous Monitoring and Evaluation:\n i. Monitoring data should be analyzed to identify trends, anomalies, and areas for improvement in resource planning and optimization\n ii. Resource plans and strategies should be adapted in response to changing business requirements, technological advancements, and market fluctuations\n iii. Periodic reviews of resource plans should be conducted to ensure they align with evolving business needs, usage and capacity patterns, and overall performance requirements",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n Applicable to all service models:\n The CSC should monitor SLAs to ensure that the service capacity requirements are being met. These may be standard CSP SLAs, or they may be custom SLAs that have been agreed upon during contract negotiations. \n \n The responsibility of delivering against these SLAs is with the CSP. There may be some cloud models where the CSP requires the CSC to deliver their own metrics to the CSP to help in the longer term service capacity planning.\n \n Metrics should be leveraged by the CSC to monitor and ensure that the CSP is meeting the determined SLAs. A regular review cycle should be adopted to ensure that the level of service delivered by the CSP is not deteriorating outside of the determined SLAs.\n \n The implementation best practices provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Network Security",
        "Control ID": "IVS-03",
        "Control Specification": "Monitor, encrypt and restrict communications between environments\n to only authenticated and authorized connections, as justified by the business.\n Review these configurations at least annually, and support them by a documented\n justification of all allowed services, protocols, ports, and compensating controls.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n The responsibility for this control differs depending upon the chosen service. For IaaS and PaaS, this is a “Shared (Dependent control)” – while the CSP will be responsible for communications security at the infrastructure, platform, and orchestration level, the CSC is responsible for communications security above the provisioned infrastructure/platform, or when connecting different environments together. For SaaS offerings, this is a CSP-owned control. Communications security should be a standard component of the software application provided, providing a safe environment for the CSC to interact with the SaaS offering. \n \n Implementation Guidelines.\n IaaS Provider:\n The CSP is responsible for monitoring, encrypting, and restricting communications between the orchestration layer (cloud management platform) and the CSC, and the orchestration layer and the provisioned infrastructure. This should be enforced by the use of secure protocols (TLS/HTTPS), secure APIs, perimeter security controls, and a CSP-provisioned security monitoring capability to identify potential attack vectors. The security architecture protecting the IaaS environment should be well documented, and follow a governed change management process. The configuration and associated documentation should be regularly reviewed at least annually, in order to identify any areas for improvement, or to adapt security policies to address new attack vectors. The CSP should also provide tools (either as part of the service or via a marketplace) to the CSC to enable them to build and design their own communications security architecture, however it is the responsibility of the CSC to deploy and manage the appropriate security controls.\n \n PaaS Provider:\n The CSP is responsible for monitoring, encrypting, and restricting communications across the infrastructure and the platform that is being delivered as a service to the CSC. This includes the use of secure protocols (TLS/HTTPS) and secure APIs to support the CSC in accessing the platform service, along with perimeter security controls and a monitoring function to identify any potentially malicious activity from outside of the PaaS environment. The security model should be well documented and regularly reviewed by the CSP, and the APIs with which the CSC interacts should be documented and shared externally to enable the CSC to understand how to interact with the service securely. The CSP is not responsible for the security of the applications or functions that are provisioned by the CSC, however the CSP may provide tools to support the CSC.\n \n SaaS Provider:\n The CSP is responsible for monitoring, encrypting, and restricting communications through all layers of the infrastructure, up to and including the application being offered to the CSC. The CSP should deliver an environment to the CSC that protects data in motion, provides an authentication and authorization mechanism to prevent unauthorized access to the environment, and implements security controls to prevent lateral movement across CSC environments. The configuration of the security model should be well documented internally with mature change management processes in place. Additionally, the CSP is advised to share an overview of the security controls with the CSC to enable it to make informed decisions around the security of the software being delivered as a service.\n \n Implementation best practices for cloud network security include (but are not limited to):\n a. Network Design Principles:\n i. Principles guiding the network design, such as security, resource scalability, performance, and regulatory compliance should be well comprehended and articulated\n ii. An inventory of authorized services, protocols, and ports permitted for communication between the cloud network environments should be established and maintained\n iii. Network security baselines should be implemented as part of a change management framework (refer to CCC-06) that encompass parameters for network virtualization and network security configurations, as well as define normal network traffic patterns for the detection of deviations and potential threats\n iv. Guidelines for network segmentation, access control, and traffic management should be defined \n b. Network Communications Monitoring:\n i. Identification and analysis of network traffic should be implemented, focusing on the paths of information data flows, including its origins, destinations, and routes through sensitive network areas\n ii. Network traffic monitoring and analysis tools should be implemented with capabilities for:\n • Packet capture and analysis\n • Flow monitoring\n • Anomaly detection and behavioral analytics\n • User activity tracking\n iii. Monitoring tools should be integrated with SIEM systems for centralized logging and analysis of network traffic\n c. Network Communications Encryption: End-to-end encryption should be implemented to secure data in transit across the network communication channels\n i. Network devices should be configured to enforce strong encryption for specific protocols and ports\n ii. VPN tunnels should be utilized for secure communication between isolated network segments\n d. Network Communications Restriction:\n i. Access controls should be defined and enforced using firewalls, access control lists (ACLs), VPNs, and IAM systems\n ii. Firewalls should be deployed at key points within your cloud network architecture to act as gateways between internal and external network connections, filtering incoming and outgoing traffic based on pre-defined security rules\n iii. Firewalls should be configured with granular access control rules, including IP address ranges, protocols, and ports\n iv. If the cloud environment requires publicly accessible services like web or email servers, a Demilitarized Zone (DMZ) should be established, acting as a buffer zone for isolating sensitive internal resources from potential external threats\n e. Zero Trust Network Access (ZTNA): Adopt a zero-trust approach to cloud network access control, assuming that no user or network device is inherently trusted until verified to dynamically enforce access restrictions based on user identity, device posture, and context\n f. Network Configurations Review: \n i. The inventory of allowed network services, protocols, ports, and compensating controls, and network security and access control configurations and encryption practices should be reviewed and updated at least annually\n ii. The rationale for allowances should be well-justified based on business needs and risk assessments\n \n Container-Specific Implementation Guidelines.\n Network communications justified by the business should be allowed, encrypted, and require authorization. Conversely, unjustified network communications should be disallowed.\n \n Container application-aware network monitoring tools should be leveraged for:\n a. Container Network Surface: Automated determination of proper container networking surfaces, including both inbound ports and process-port bindings\n b. Container Traffic Flows: Detection of traffic flows between containers and other network entities over both wire traffic and encapsulated traffic\n c. Network Anomalies Detection: Detection of network anomalies, such as unexpected traffic flows within the organization’s network, port scanning, or outbound access to potentially dangerous destinations\n d. Malicious Content Detection: detection of invalid or unexpected malicious processes and data introduced into the container environment",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n IaaS Customer:\n The CSC is responsible for monitoring, encrypting, and restricting communications between the components that are deployed on top of the infrastructure service. This should include designing a communications security architecture that includes the appropriate use of secure protocols to protect data in motion. The CSC should implement a security monitoring capability, either cloud-native or through integration into an existing SOC platform, to integrate logs from the IaaS workload environment and identify suspicious events. The CSC should ensure that there are appropriate network-level controls in place to prevent unwanted access or exposure to resources, and to protect workloads from both lateral movement inside the environment, and malicious attackers from outside the environment. The configuration and associated documentation around communications security should be regularly reviewed, at least annually, in order to identify areas for improvement, or to adapt security policies to address new attack vectors. Change management in the environment should be defined by a well-managed process.\n \n PaaS Customer:\n The CSC is responsible to monitor, encrypt, and restrict communications across the components on top of the platform service. This includes the adoption of secure protocols (TLS/SSL) and secure APIs to ensure encrypted or protected access to the environment. The security model relating to any applications developed on top of the platform should be well documented and regularly reviewed by the CSC, taking into consideration any changes to CSP-provided APIs or infrastructure that may impact the CSC security model.\n \n SaaS Customer:\n The CSC consumes the entire software stack as a service and as such is not responsible for any of the security controls relating to communications security or communications monitoring. The CSC should however review CSP-provided documentation in order to make an informed decision around the security of the software delivered as a service.\n \n Container-Specific Implementation Guidelines\n The container-specific implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "OS Hardening and Base Controls",
        "Control ID": "IVS-04",
        "Control Specification": "Harden host and guest OS, hypervisor or infrastructure control plane\n according to their respective best practices, and supported by technical controls,\n as part of a security baseline.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Independent)",
        "Control Ownership by Service Delivery Model - PaaS": "CSP-Owned",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n This control’s implementation responsibility varies between the CSP and CSC across the three cloud service models. With regards to IaaS, there is a Shared and independent implementation responsibility between CSP and CSC for the Host and Guest OS hardening, since the CSP is responsible for the Host's hardening (OS and/or Hypervisor), and the CSC is responsible for the Guest VM and OS hardening. For PaaS and SaaS the implementation responsibility shifts to the CSP only, since the hardening of OS, hypervisor and underlying infrastructure are not part of CSC’s cloud stack and therefore the CSC has no control over their secure implementation. \n \n Implementation Guidelines.\n IaaS Provider: \n The CSP is responsible for provisioning hardware to support customer virtual machines that includes: hardening and maintaining updates to hypervisors, Host operating system, firmware, and utilizing confidential computing including trustworthiness assessment rooted in hardware, as well as Trusted Execution Environments,Trusted Platform Modules (TPM) and other trusted and assured equipment, obtained through a verified and reputable supplier. The CSP is not responsible for the updates to operating systems installed above the host infrastructure.\n \n PaaS Provider:\n The CSP is responsible for all system hardening host and guest OS patching across the infrastructure plane and it should do this as per the client’s requirements or as defined by good practice, but is not responsible for application level patching.\n \n SaaS Provider: \n The CSP is responsible for all elements of system patches, including application level requirements.\n \n Where the CSP is responsible for the updates to host (hypervisor)/guest and other system patching, it should deploy suitable testing methods before rolling out updates. Updates should be deployed in a suitable time frame depending on contractual agreements.\n \n Implementation best practices for cloud platforms hardening include (but are not limited to):\n a. Host/Guest OS, Hypervisor, VMs, Control Plane Hardening:\n i. A secure configuration baseline using industry vendors and benchmarks should be created and utilized to ensure consistency across all platforms\n ii. A minimal installation should be utilized and implemented, using pre-configured secure templates according to the baseline and having only essential system services/processes enabled (i.e., unnecessary ports, protocols, and network services should be disabled or removed to reduce the attack surface)\n iii. Software (OSes, Hypervisor, VMs and applications) should be kept up-to-date with the latest security patches\n iv. Strong authentication (e.g., complex passwords, MFA) should be configured for accessing the hypervisor/VM/OS management interfaces\n v. Security features such as firewalls, anti-malware, and system logging should be enabled\n vi. Configurations should be regularly reviewed and updated against the configuration baseline to ensure only necessary features are enabled\n vii. For sensitive CSC workloads:\n • A dedicated, single-tenant or bare-metal hypervisor instances should be used to avoid the exploitation of possible hypervisor vulnerabilities\n • Conventional virtual machines (VMs) should be replaced with confidential VMs for enhanced security\n • Secure boot and virtual Trusted Platform Module (vTPM) should be utilized for enhanced security\n • Hypervisors/OSes/VMs that have been rigorously tested for security should be selected (i.e., evaluated against Common Criteria (CC) Protection Profiles (PP) and assigned an Evaluation Assurance Level (EAL))\n \n VM Lifecycle-Specific Implementation Guidelines.\n a. Creation\n i. Secure VM templates should be used that are pre-configured with security settings, including hardened OS configurations, patching schedules, and access controls\n ii. VM images should be scanned for vulnerabilities before provisioning them to CSCs\n iii. Unnecessary applications, services, and drivers should be removed from VM images to reduce the attack surface\n iv. A detailed inventory of all VMs should be maintained to track their creation, deployment, and status\n v. Compliance checks should be implemented to ensure VMs meet security and regulatory requirements\n b. Deployment\n i. Provisioning controls should be implemented to prevent unauthorized deployment of VMs\n ii. Network segmentation should be used to isolate VMs from each other and the rest of the network.\n iii. Access controls should be implemented to restrict identities access to VMs based on the cloud IAM access control policy\n iv. Monitoring and alerting systems should be implemented and configured to detect suspicious activity and potential security breaches\n v. Change management process should be implemented to control and track changes made to VMs (refer to CCC domain)\n c. Operation\n i. Security patches and updates should be regularly applied to VMs to address vulnerabilities and prevent known exploits\n ii. Vulnerability scans should be regularly conducted to identify and remediate security weaknesses\n iii. Configuration management tools should be used to enforce consistent and secure configurations for VMs\n iv. VMs should be continuously monitored for resource usage, security events, and potential anomalies\n v. Logging and auditing of VM activity should be enabled to track changes and events.\n d. Maintenance\n i. Backup and recovery strategies should be implemented to protect VM data from loss or corruption\n ii. Maintenance tasks on VMs should adhere to the change management process\n iii. Any changes made to VMs should be tested and validated before deploying them to production\n iv. Documentation of VM configurations, maintenance procedures, and security policies should be maintained\n e. Decommissioning\n i. VM disks should be encrypted before decommissioning to protect sensitive data from unauthorized access\n ii. VM disks should be securely destroyed or erased to prevent data recovery\n iii. Decommissioned VMs should be removed from the inventory and tracking systems and the decommissioning process documented to ensure proper authorization\n iv. Audit trails should be maintained to record the decommissioning activity and data destruction procedures\n \n Container-Specific Implementation Guidelines.\n Technical controls should aid situations when only the ports, protocols, and services necessary to meet business needs are provided. Such controls should be based on common benchmarks.\n \n The CSP should implement anti-malware, file integrity monitoring, and logging, and utilize hardware rooted trust in confidential computing (CC) and virtual trusted platform modules (vTPMs).\n \n Whenever possible, organizations should use minimalistic, container-specific host operating systems with all other services and functionality disabled, and with read-only file systems and other hardening practices employed to reduce attack surfaces.\n \n The following best practices for securing containers are also recommended:\n a. Dedicated Container Host: hosts that run containers should only run containers and not other apps—such as web servers or databases—outside of containers\n b. Container Host Patch Management: Hosts that run containers should be continuously scanned for vulnerabilities and updated promptly\n c. Hardened Container Host: The host OS should not run unnecessary system services\n d. Container Host Access: Access to the container host should be based on the need-to-know and least privilege principles\n e. Container Security Monitoring: file integrity monitoring and host intrusion detection should be leveraged for containers.\n f. CC Protection: Where applicable, hosts should be measured by confidential computing hardware and attested to verify trust. This enables verification that the platform on which the host depends including firmware, boot code from the CPU silicon up is measured and attested even before the OS runs.",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n IaaS Customer:\n The CSC is responsible for hardening and maintaining updates to their deployed operating systems to reduce the attack surface. This can be accomplished through a patch management system. The CSC is not responsible for the updates and hardening of the host OS or the hypervisor. The CSC needs to provide hardened baselines to those guest operating systems by utilizing security tools such as antivirus, firewalls, monitoring, logging, confidential computing, etc. The hardening of OS for guests should align with a recognized industry standard.\n \n PaaS Customer: \n The CSC is responsible for maintaining updates to their own applications and installed software. They also are responsible for additional security hardening controls such as monitoring, logging, and protection of the applications and the stored data those applications contain. The CSC is also responsible for maintaining and justifying authorization and access to people that need that access.\n \n SaaS Customer: \n The CSC should confirm appropriate controls are implemented to conform to its requirements and utilize software according to risk criteria. The CSC is not responsible for updates or baselines to the service. It is advised as part of this control that CSC touch points, such as the integration provider and the endpoint devices used to access the service, are hardened and managed in line with corporate policy or an appropriate industry standard.\n \n Container-Specific Implementation Guidelines.\n The container-specific implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Production and Non-Production Environments",
        "Control ID": "IVS-05",
        "Control Specification": "Separate production and non-production environments.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Independent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Independent)",
        "Control Ownership by Service Delivery Model - SaaS": "Shared (Independent)",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n Both CSP and CSC are responsible for the implementation of this control but doing so independently from one another. It is a standard best practice to separate production and non-production environments to ensure a stable production environment that is not influenced by changes in the non-production environment, and to ensure that test data never enters into a production environment (and equally that no production data enters the non-production environment). This applies equally for both CSP and CSC whether the service being delivered is IaaS, PaaS, or SaaS.\n \n Implementation Guidelines.\n Applicable to all service models:\n The CSP should maintain a non-production environment that is completely separate from the production environment in order to safeguard production systems from potential threats in non-production environments. The non-production environment should be running in an architecturally similar environment which is both logically and physically separated from the production environment through the use of appropriate security controls. \n \n The non-production environment should be used for testing any pre-production releases, and should be exclusively used with test data instead of actual CSC/business data.\n \n Implementation best practices for CSPs include (but are not limited to):\n a. Accounts and Access Permissions Separation:\n i. Distinct IAM policies should exist and implemented for each environment, strictly defining access control rules and authorization levels\n ii. Access permissions should be granted based on the specific roles and tasks associated with each environment to ensure that the necessary least privileges are provided\n iii. Distinct accounts for accessing and managing production and non-production environments should be created\n b. Network Logical/Physical Separation:\n i. Logical separation between production and non-production environments should be implemented (e.g., using Virtual networks (VNet), Virtual Private Clouds (VPCs) and cloud Network Security Groups (NSGs))\n ii. Each environment should have its own VNet, encapsulated within its own network security group (NSG) to prevent accidental or deliberate cross-environment communication\n iii. Physical separation should also be considered (e.g., using separate data centers, racks, or even different physical locations)\n iv. Network segmentation tools should be utilized to isolate production and non-production environments from each other (e.g., separate subnets, firewalls, and access control lists (ACLs) to prevent unauthorized traffic from traversing between the environments)\n c. Sandbox Environments for Development and Testing:\n i. Sandbox environments specifically designed for development and testing purposes should be created\n ii. Sandboxes should be isolated from production systems to prevent accidental or malicious code deployments from affecting critical data and systems\n iii. Automated testing procedures should be implemented to validate the functionality and security of non-production environments before deployment to production\n d. Resource Management Separation: \n i. Separate resource management tools should be implemented for each environment to prevent accidental provisioning, configuration changes, or deletions in the wrong environment\n ii. Data separation strategies should be implemented to prevent the accidental mixing of production and non-production data (e.g., use different storage solutions, data masking techniques, or implementing data segregation rules within data repositories)\n iii. Different versioning systems should be used for production and non-production environments to avoid conflicts between releases and ensure that only tested and approved changes are deployed to production\n iv. Different naming conventions should be adopted for resources in production and non-production environments to avoid confusion and accidental changes to the wrong environment\n e. Documentation: Documentation outlining the separation policies, access controls, network configurations, and testing procedures should be developed and maintained for each of production and non-production environments\n f. Updates Management: Patches and updates should be first applied in the non-production environment and after successful testing, then applied to the production environment\n g. Continuous Monitoring and Evaluation: Continuous monitoring and evaluation of both production and non-production environments should be implemented to ensure that are adequately secured and aligned with security standards (e.g., Monitor System logs, network traffic, vulnerability scanning, and user activity to detect suspicious behavior or potential security breaches)",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n Applicable to all service models:\n The implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Segmentation and Segregation",
        "Control ID": "IVS-06",
        "Control Specification": "Design, develop, deploy and configure applications and infrastructures\n such that CSP and CSC (tenant) user access and intra-tenant access is appropriately\n segmented and segregated, monitored and restricted from other tenants.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n This is a “Shared (Dependent)” control for both IaaS and PaaS CSPs and CSCs. For the SaaS cloud service delivery model, it is a CSP-owned control.\n \n Implementation Guidelines.\n Network and system controls should be designed and deployed to isolate (segment and segregate) CSCs in a multi-CSC environment and between the CSP and CSC environments.\n \n IaaS Provider: \n The CSP is responsible for designing, developing, deploying and configuring the network, host infrastructure and virtualization platform such that the CSP and CSC user access and intra-CSC access is appropriately segmented, monitored, and restricted from other CSCs.\n \n PaaS Provider: \n The CSP is responsible for designing, developing, deploying, and configuring the network, host infrastructure, virtualization platform, virtual machines, operating systems, and platform software such that CSP and CSC user access and intra-CSC access is appropriately segmented and segregated, monitored, and restricted from other CSCs.\n \n SaaS Provider: \n The CSP is responsible for designing, developing, deploying, and configuring the network, host infrastructure, virtualization platform, virtual machines, operating systems, and platform software and applications. The CSP and CSC user access and intra-CSP access is appropriately segmented and segregated, monitored, and restricted from other CSCs.\n \n Applicable to all service models:\n Implementation best practices include (but not limited to):\n a. Segmentation Definition: Possible definitions of segmentation should be defined and understood including a range from “total separation” to “partial logical separation” of business-critical assets and/or personal data and sensitive user data, and sessions\n b. Multi-tenant Infrastructure Isolation: Multi-Tenant environments should be physically and logically separated and isolated to prevent unauthorized access between different tenants using various segmentation techniques like network segmentation, virtual machines, containerization to create isolated compartments for each tenant\n c. Network Segmentation:\n i. Network segmentation should be enforced at various levels, including virtual private clouds (VPCs), subnets, and security groups to restrict network traffic within and between tenants, and prevent unauthorized cross-tenant access\n ii. Virtualized networks (VNet) should be utilized to create private, isolated networks for each tenant and to compartmentalize tenant data and applications, preventing unauthorized access from other tenant environments. Implement Network Security Groups (NSGs) to enforce granular access control within each VNet.\n d. Access Segregation:\n i. Robust IAM practices should be established to control access to cloud resources and enforce segregation. Use RBAC, MFA and PoLP to limit access based on user roles and responsibilities. \n ii. CSP and CSC user access to cloud resources should be separated. CSPs should be provided with access to infrastructure components and management tools, while restricting CSCs to their own tenants’ resources\n iii. Cross-CSC protections should be implemented at the application layer to ensure that the CSC cannot compromise the CSP’s applications to gain unauthorized access to the information of other CSCs\n e. Access Monitoring and Reviews: CSP and tenant access activities should be continuously monitored and reviewed to provide visibility into potential security breaches or unauthorized access attempts",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSC applies.\n \n Implementation Guidelines.\n IaaS Customer: \n The CSC is responsible for designing, developing, deploying and configuring its virtual machines, operating systems, platform software, applications, and data such that CSP and CSC user access and intra-CSC access is appropriately segmented and segregated, monitored and restricted from other CSCs.\n \n PaaS Customer: \n The CSC is responsible for designing, developing, deploying and configuring its installed software, applications and data such that CSP and CSC user access and intra-CSC access is appropriately segmented and segregated, monitored, and restricted from other CSCs.\n \n SaaS Customer: \n The SaaS customer should confirm that the CSP has appropriate cross-CSC protections and isolation in place, and that customer environments are logically segregated to prevent other CSP’s users and customers from accessing resources not assigned to them. \n \n Applicable to all service models:\n The implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Migration to Cloud Environments",
        "Control ID": "IVS-07",
        "Control Specification": "Use secure and encrypted communication channels when migrating servers,\n services, applications, or data to cloud environments. Such channels must include\n only up-to-date and approved protocols.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - SaaS": "Shared (Dependent)",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n This control is a “Shared (Dependent)” control irrespective of the service model. It should be implemented/operated by both the CSP and CSC.\n \n The CSP and CSC should use secure and encrypted communication channels including up-to-date and approved protocols (e.g., FIPS), when migrating servers, services, applications, or data both within and outside its boundary.\n \n \n Implementation Guidelines.\n Applicable to all service models:\n When migrating servers, services, applications, or data to cloud environments, CSPs should implement secure and encrypted communication channels to safeguard sensitive information. This ensures that data remains protected throughout the migration process and during its subsequent operation in the cloud.\n \n The CSPs should adhere to the following implementation best practices:\n a. End-to-End Data Encryption:\n i. Data should be encrypted at all stages of its lifecycle, from storage to transmission and processing\n ii. Data-at-rest encryption should be employed to protect data stored on disks or persistent storage devices within the cloud\n iii. Data-in-transit encryption should be utilized to protect data transmitted between cloud components and between clients and the cloud\n b. Secure Transport Protocols:\n i. Up-to-date and industry-approved encryption protocols should be leveraged, at the various OSI layers, for communication between cloud infrastructure components and between clients and the cloud (e.g., Use HTTPS/TLS or FTPS (transport layer), IPSec (network layer), and secure file transfer protocols SFTP, SCP over SSH (application layer))\n ii. These protocols should be configured with strong cryptographic cipher suites and authentication mechanisms (refer to CEK domain) and used in accordance with corporate security standards and industry best practices\n c. VPN Technology:\n i. VPNs should be implemented to establish a secure and encrypted tunnel between on-premises networks and cloud environments\n ii. VPN protocols like IPSec or TLS should be employed with strong encryption and authentication mechanisms\n d. API Security: If APIs are used in the migration process, they should be secured with proper authentication, authorization, and data validation mechanisms\n e. Authentication Mechanisms: MFA should be utilized to verify the identity of users and systems participating in the data transfer\n f. Limit Data Exposure:\n i. The amount of sensitive data being transferred should be minimized and only what is necessary exposed\n ii. For sensitive data, using data masking or obfuscation techniques during migration should be considered to further reduce the risk of data exposure\n g. Migration Monitoring and Logging:\n i. All data transfers should be continuously monitored and logged during the migration process\n ii. The security practices of any third-party vendors involved in the migration process should be evaluated and monitored",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n \n Implementation Guidelines.\n The implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Network Architecture Documentation",
        "Control ID": "IVS-08",
        "Control Specification": "Identify and document high-risk environments.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n This is a “Shared (Dependent)” control for both IaaS and PaaS CSsP and CSCs. The CSC is responsible for identifying and documenting high-risk environments within CSC-managed workloads but depends on the CSP to provide the technical capabilities for isolation and segregation between CSCs. \n \n The SaaS CSP is responsible for identifying and documenting high-risk environments within the SaaS application. Data flow diagrams should clearly define boundaries and data flows between zones having different data classification, trust levels, or compliance and regulatory requirements which clearly identify high-risk environments. \n \n Implementation Guidelines.\n CSPs should establish a network architecture documentation to ensure the secure, efficient, and scalable operation of their cloud infrastructure. This documentation should be detailed, consistent, and readily accessible to all relevant stakeholders, including network engineers, security professionals, and customer support teams.\n \n IaaS Provider:\n The CSP is responsible for identifying and documenting high-risk environments within the network, host infrastructure and virtualization platform.\n \n PaaS Provider: \n The CSP is responsible for identifying and documenting high-risk environments within the network, host infrastructure, virtualization platform, virtual machines, operating systems and platform software.\n \n SaaS Provider: \n The CSP is responsible for identifying and documenting high-risk environments within the network, host infrastructure, virtualization platform, virtual machines, operating systems, platform software, and applications. The CSP should make a copy of the documentation available to the CSC on request.\n \n Applicable to all service models: \n Implementation best practices for network architecture documentation include (but not limited):\n a. Documentation Scope and Objectives: The scope of the network architecture diagrams should be established such as the types of networks, physical and logical components, services, and applications covered, and the specific objectives for creating the documentation\n b. Standardized Terminology and Definitions: Adopt a consistent and standardized set of terminology and definitions that extends to network diagrams, architectural models, and other documentation elements\n c. High-Risk Environments Identification: \n i. Thorough risk assessments should be conducted to identify potential vulnerabilities and high-risk areas in the network topology\n ii. High-risk network areas, such as network segments or traffic flows with high volume or sensitive data transfers that are more susceptible to attacks or cause the most damage if compromised, should be prioritized and have stronger security measures applied to\n d. Network Diagrams and Architecture Models:\n i. Accurate and up-to-date architecture diagrams should be created that visualize the entire network topology, including physical and virtual network components and their corresponding, security zones descriptions, hypervisors, trusted execution environments, workloads on each host and their inter-connectivity and communication paths (e.g., traffic flows, and out-of-band communication channels)\n ii. Network scanning tools (e.g., open-source Nmap, Zenmap) should be utilized to identify and validate all network components’ topology, including servers, workstations, network devices, and cloud resources\n iii. Diagrams should be supplemented with architectural models and relevant tools (e.g., open-source GNS3, Ansible, LibreNMS) that represent the logical organization and interactions of network components\n iv. Tools like network diagram software for visual representation of the network architecture is encouraged that are used (e.g., open-source Diagrams.net, NetBox)\n v. The network diagrams and relevant software should be accessible by authorized personnel and protected against unauthorized access\n e. Network Security Controls Documentation: A detailed description of all security controls implemented in the network should be documented\n i. The version numbers, patch levels, configuration settings of all network architecture components (e.g., firewall rules, access control lists, and security protocols)\n ii. The network requirements that govern access, authentication, authorization, and data protection and how these are implemented and enforced throughout the network infrastructure\n f. Network Change Management: \n i. A change management process for network modifications and updates should be defined (including authorization procedures, testing protocols, and rollback mechanisms)\n ii. Version control practices should be implemented to track changes to network configurations and documentation over time\n g. Network Documentation Review and Updates: Network architecture and relevant risk assessments documentation should be treated as living documents and updated regularly to reflect changes in the network topology, security policy, new security threats, and evolving compliance requirements",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n This is a “Shared (Dependent)” control for both IaaS and PaaS CSPs and CSCs. The CSC is responsible for identifying and documenting high-risk environments within CSC-managed workloads but depends on the CSP to provide the technical capabilities for isolation and segregation between CSCs. \n \n This control does not apply to the SaaS customer; it is a CSP-owned control.\n \n Implementation Guidelines.\n IaaS Customer: \n The CSC is responsible for identifying and documenting high-risk environments within their deployed virtual machines, operating systems, platform software, applications and data.\n \n PaaS Customer: \n The CSC is responsible for identifying and documenting high-risk environments within their installed software, applications and data.\n \n SaaS Customer: \n Not applicable, since this is a CSP-owned control. The CSC should confirm that the CSP has identified and documented high-risk environments.\n \n Applicable to all service models:\n The implementation guidelines provided for the CSP apply."
    },
    {
        "Control Domain": "Infrastructure & Virtualization Security",
        "Control Title": "Network Defense",
        "Control ID": "IVS-09",
        "Control Specification": "Define, implement and evaluate processes, procedures and defense-in-depth\n techniques for protection, detection, and timely response to network-based attacks.",
        "Control Ownership by Service Delivery Model - IaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - PaaS": "Shared (Dependent)",
        "Control Ownership by Service Delivery Model - SaaS": "CSP-Owned",
        "CCM Implementation Guidelines v2.0  - Cloud Service Provider": "Control Ownership Rationale.\n This is a Shared (Dependent) control for both the IaaS and PaaS CSP and the CSC. For the SaaS solution, it is CSP-owned.\n In an IaaS service, the CSC shares responsibility with the CSP to deploy, manage, secure, and configure the networking solutions. Most networking security controls in a PaaS solution are provided by the CSP. In a SaaS service, network security controls are managed and secured for the CSC as part of a software core offering because the network infrastructure is abstracted.\n \n Implementation Guidelines.\n Network-based attacks (such as but not limited to Layer 3 DDoS, man-in-the- middle, SQL Injection, IP spoofing, malware, etc.) attempt to gain unauthorized access to network infrastructure in order to compromise the confidentiality, integrity and availability of assets and information.\n \n Network security controls (defense-in-depth techniques) detect and prevent attacks using advanced threat intelligence and protocol analysis, anomaly detection, indicators of compromise blocking, and signature-based methods.\n \n The CSP should also expose security controls to the CSC so it can properly configure and manage its network security.\n \n Vulnerabilities that exist in a physical environment also apply in a virtual environment. Configuration flaws/vulnerabilities in the applications, firewalls, or networks are vulnerable to exploits. Defense-in-depth techniques should be leveraged for both physical, logical, and administrative controls.\n \n IaaS Provider: \n The CSP should define, implement and evaluate processes, procedures, and defense-in-depth techniques (e.g., DDoS mitigation solution, network filtering, firewalls, IDS/IPS) for protection, detection, and timely response to network-based attacks against the host infrastructure (hypervisor and operating system) and storage devices.\n \n PaaS Provider: \n The CSP should define, implement and evaluate processes, procedures, and defense-in-depth techniques (e.g., DDoS mitigation solution, network filtering, firewalls, IDS/IPS) for protection, detection, and timely response to network-based attacks against the host infrastructure (hypervisor and operating system), storage devices, virtual machines, containers, platform-managed software including web services, database services, and analytics.\n \n SaaS Provider: \n The CSP should define, implement and evaluate processes, procedures, and defense-in-depth techniques (e.g., DDoS mitigation solution, network filtering, firewalls, IDS/IPS) for protection, detection, and timely response to network-based attacks against the host infrastructure (hypervisor and operating system), storage devices, virtual machines, containers, platform-managed software including web services, database services, analytics, applications, and data.\n \n Applicable to all service models:\n Defense-in-depth techniques/insights that should be considered include (but not be limited to):\n a. Network Assets Scope and Protection Prioritization:\n i. A detailed and regularly updated inventory of all cloud network technologies and types within the cloud environment should be developed, including both wired and wireless network assets\n ii. Based on data sensitivity and its classification ensure that the most critical network assets receive prioritized protection measures\n b. Firewalls Management:\n i. Firewalls should be deployed at each layer of the cloud network (virtual private cloud [VPC], subnet, and application level) to filter traffic based on security rules and prevent unauthorized access\n ii. Web Application Firewalls should be deployed to protect web applications from common web-based attacks and block malicious requests before they can reach the application server (e.g., SQL injection, cross-site scripting, and denial-of-service [DoS] attacks)\n c. Intrusion Detection and Prevention Systems (IDS/IPS): IDS/IPS solutions should be implemented to monitor network traffic for suspicious activity and identify potential intrusions or attacks (IDS passively detects anomalies, while IPS actively blocks malicious traffic)\n d. Network Traffic Analysis (NTA):\n i. NTA tools should be utilized to gain deeper insights into network traffic patterns and identify anomalies that may indicate malicious activities (e.g., deep packet analysis, protect DDoS attacks with traffic throttling, and blackholing)\n ii. Ingress/egress traffic patterns may include media access control (MAC) spoofing, ARP poisoning attacks, and distributed denial-of-service (DDoS) attacks\n e. Network Traffic Encryption: Sensitive data in transit should be encrypted to protect it from interception and unauthorized access using secure network protocols such as TLS/IPsec for data transmissions within the cloud and between cloud and on-premises environments\n f. Network Threat Intelligence: \n i. Threat intelligence feeds should be utilized to stay informed about emerging network threats, vulnerabilities, and attack methods in the cloud environment\n ii. Threat intelligence should be integrated into network security systems to proactively detect and prevent cloud network attacks\n g. Network Infrastructure Patching and Updates: \n i. A vulnerability management program should target be leveraged to identify, assess, and remediate vulnerabilities in the cloud network infrastructure and software/applications (refer to TVM domain)\n ii. Stay up-to-date with the latest security patches and updates for cloud network infrastructure components to mitigate vulnerabilities that could be exploited by attackers\n h. Network Secure Configuration Management:\n i. Secure configuration standards for cloud network resources should be enforced (e.g., virtual machines, network devices settings, and cloud-based application deployment configurations)\n ii. Security settings should be enabled with strong encryption for authentication and transmission, and vendor default settings replaced (e.g., encryption keys, passwords, and SNMP community strings)\n i. Vendors Diversity of Security Controls: A variety of network and system components from different vendors should be used and integrated to reduce the risk of single points of failure and vulnerabilities\n j. Continuous Monitoring and Evaluation:\n i. Auditing and logging capabilities (e.g., SIEM solution) should be implemented to track network activity, user actions, and security events from various network assets Monitor logs for anomalies, suspicious activity, and potential breaches\n ii. Capabilities should be developed to detect unauthorized (rogue) network devices in the network and disconnect them quickly",
        "CCM Implementation Guidelines v2.0  - Cloud Service Consumer": "Control Ownership Rationale.\n The control ownership rationale provided for the CSP applies.\n \n Implementation Guidelines.\n Network-based attacks (such as but not limited to Layer 3 DDoS, man-in-the- middle, SQL Injection, IP spoofing, phishing, malware, etc.) attempt to gain unauthorized access to network infrastructure in order to compromise the confidentiality, integrity and availability of assets and information.\n \n Network security controls (defense-in-depth techniques) detect and prevent attacks using advanced threat intelligence and protocol analysis, anomaly detection, indicators of compromise blocking, and signature-based methods.\n \n The CSP should also expose security controls to the CSC so it can properly configure and manage its network security.\n \n Vulnerabilities that exist in a physical environment also apply in a virtual environment. Configuration flaws/vulnerabilities in the applications, firewalls, or networks are vulnerable to exploits. Defense-in-depth techniques should be leveraged for both physical, logical, and administrative controls.\n \n IaaS Customer: \n The CSC should define, implement and evaluate processes, procedures, and defense-in-depth techniques (e.g., a DDoS mitigation solution, network filtering, firewalls, IDS/IPS) for protection, detection, and timely response to network-based attacks against the guest operating and virtual machines deployed and consumed on the CSP provisioned infrastructure.\n \n PaaS Customer: \n The CSC should define, implement and evaluate processes, procedures, and defense-in-depth techniques (e.g., DDoS mitigation solution, network filtering, firewalls, IDS/IPS) for protection, detection, and timely response to network-based attacks against the applications that it developed and hosted on the platform provisioned by the CSP.\n \n SaaS Customer: \n Not applicable. The SaaS customer should confirm that the CSP has defined, implemented and evaluated processes, procedures. and defense-in-depth techniques for protection, detection, and timely response to network-based attacks.\n \n Where SSO is used to authenticate to the SaaS application, the CSC is responsible for securing its network while exchanging identity information with the SaaS Provider.\n \n Applicable to all service models:\n The implementation guidelines provided for the CSP apply."
    }
]