[
    {
        "Control Domain": "Interoperability & Portability",
        "Control Title": "Interoperability and Portability Policy and Procedures",
        "Control ID": "IPY-01",
        "CCM_Control Specification": "Establish, document, approve, communicate, apply, evaluate and maintain\npolicies and procedures for interoperability and portability including\nrequirements for:\na. Communications between application interfaces\nb. Information processing interoperability\nc. Application development portability\nd. Information/Data exchange, usage, portability, integrity, and persistence\nReview and update the policies and procedures at least annually.\n",
        "Implementation Guidelines_CCM Implementation Guidelines v2.0 CSP": "Control Ownership Rationale.\nThe CSP is responsible for policy, standards, guidelines and procedures, and transparency in communicating information related to interoperability and portability of data and associated metadata and code. \n\nImplementation Guidelines.\nApplicable to all service models:\nSystems interoperability is the primary concern of the CSC. The degree to which a CSP offers a service based on technology that is published or standardized  typically will increase the interoperability across cloud systems. Interoperability and portability controls aim to prepare the CSC to protect their business from failure in case of a CSP outage. This can include plans for interoperability and portability with other CSPs or a different region with the current provider.\n\nIaaS Provider: \nThe CSP should provide standardized hardware and computing resources that can interact with various disparate systems, with minimal effort, and which should strictly adhere to industry standards to maintain interoperability. The CSP should be able to support complex scenarios such as cloud brokerage, cloud bursting, hybrid clouds, multi-cloud federation, etc.\n\nThe CSP is responsible for implementing policies, processes, procedures and standards that enable the CSC in deploying architecture that can involve multiple CSPs, hybrid models, or moving to another CSP or private cloud. The policies, processes and procedures should remain current, be reviewed annually, be audited annually, and independent audit reports should be made available to the CSC. \n\nPaaS Provider: \nThe CSP is responsible for providing a platform on which the CSC can build its systems. The CSP provides a runtime environment and an integrated application stack. It allows developers to quickly develop and deploy custom applications on the offered platforms without the need to build the infrastructure. The CSP provides the entire infrastructure and its maintenance to its consumers.\n\nThe CSP is responsible for implementing policies, processes, procedures, and standards that support the CSC in developing and deploying applications that can be transferred to another CSP or private cloud. The policies, processes, and procedures should remain current, be reviewed annually, be audited annually, and independent audit reports should be made available to the CSC.\n\nSaaS Provider: \nThe CSP provides application capabilities over the cloud, and the CSC manages its administration and the information flowing in and out of the system. The end customer needs a browser and the majority of the administration at all the levels rests with the provider.\n\nThe CSP is responsible for implementing policies, processes, procedures, and standards that support the CSC in retaining data and metadata in line with their data retention standards, and recovering all data and metadata when the service ceases or when moving to another CSP or private cloud. The policies, processes, and procedures should remain current, be reviewed annually, be audited annually, and independent audit reports should be made available to CSCs. \n\nPolicies should include (but not limited to) provisions on the following: \na. Standardized Communication Protocols: Ensure seamless interaction between different application interfaces by mandating the use of widely accepted communication protocols (e.g., RESTful APIs, JSON, XML).\ni. Adopt industry-standard API protocols, such as RESTful APIs or SOAP APIs.\nii. Document API specifications clearly and provide SDKs (software development kits) for developers.\niii. Implement API gateways to manage and secure API traffic providing API documentation, including usage guidelines, example requests, and responses\niv. Implement versioning to manage changes and maintain backward compatibility.\nb. Secure Communication: Ensure that data exchanged between application interfaces is secure and protected from unauthorized access by implementing transport layer security (TLS/SSL) and enforcing authentication and authorization mechanisms.\nc. Standardized Data Formats: Ensure consistent data processing across diverse systems by defining and adhering to standardized data formats to facilitate interoperability between applications and data processing systems.\ni. Utilize standardized data formats, such as XML, JSON, or CSV, for data representation.\nii. Implement data transformation and normalization techniques to ensure data consistency.\niii. Adopt common data models and data exchange protocols to facilitate interoperable data processing\nd. Cross-Platform Compatibility: Support information processing across different platforms and environments by designing applications and processing workflows to be platform-agnostic. Use containerization technologies (e.g., Docker) to encapsulate applications.\ni. Utilize cloud-neutral development frameworks and tools, such as serverless computing platforms or containerization technologies.\nii. Employ cloud-agnostic programming languages and libraries.\niii. Adopt standardized deployment processes and configuration management tools for cloud platforms.\ne. Common Data Processing Standards: Ensure that information processing adheres to industry-accepted standards by implementing processing logic based on well-established standards (e.g., SQL for databases, Apache Spark for big data processing).\nf. Cross-Platform Development Tools: Enable developers to create applications that can run on different platforms without significant modification by providing development tools and frameworks that support cross-platform development.\ng. Containerization Support: Simplify the deployment and execution of applications across various environments by supporting containerization technologies (e.g., Kubernetes) to encapsulate applications, making them portable and independent of underlying infrastructure.\nh. Infrastructure As Code (IaC) Practices: Standardize the description and provisioning of infrastructure to ensure consistency across environments by encouraging the use of IaC tools (e.g., Terraform, Ansible) to define and manage infrastructure configurations in a portable manner.\ni. Standardized Data Exchange Formats: Facilitate consistent and unambiguous data exchange between systems by defining and adhering to standardized data exchange formats and structures, ensuring compatibility and reducing data transformation complexities.\nj. Data Integrity and Persistence: Ensure the reliability and integrity of data across different systems and storage environments by implementing data integrity checks, using reliable storage systems, and establishing backup and recovery mechanisms to maintain data persistence.\ni. Utilize data integrity validation mechanisms to ensure data accuracy during transfers.\nii. Employ data masking techniques to protect sensitive data in logs and screenshots.\nk. Common Data Usage Policies: Standardize how data is accessed, utilized, and shared across different applications by defining and enforcing data usage policies, access controls, and permissions to maintain consistency and security.\nl. Data Portability Contractual Obligations:\ni. Define and document standardized formats for data exchange to facilitate portability\nii. The data retention period should specify the length of time data will be stored, taking into account legal and regulatory requirements. Implement automated processes for data retention and deletion.\niii. The scope of data retained should be defined and made available to the CSCs\niv. A comprehensive data deletion policy for retained data should be defined to include secure deletion methods (refer to DCS-01 and DSP-02)\nm. Contract Termination: Upon contract termination, CSPs should provide reasonable assistance to CSCs in exporting and transferring their data to another cloud environment or on-premises systems. This assistance may include providing technical documentation, data export tools, and necessary support to facilitate seamless data migration.\ni. Outline CSCs' access to data upon contract termination in the contractual agreement\nii. Implement secure methods for data handover or transfer to CSCs\niii. Develop and document an exit plan that ensures a smooth transition of services and data to CSCs\niv. Include security measures to protect data during the transition period\nv. Clearly define data ownership and transfer of ownership upon contract termination\nvi. Include legal and technical mechanisms to ensure data confidentiality and integrity\nn. Approval: Approval requirements and senior management involvement to ensure alignment with the organization's strategic goals and risk appetite\ni. An approval process should be established for any changes or modifications to the policy and procedures\nii. A documented record of approvals (including dates, names of approvers, and any relevant comments or discussions) should be maintained\no. Communication: Effective communication of the policy and procedures should be facilitated to all relevant cloud stakeholders\np. Maintenance and Reviews: Interoperability and portability policies and procedures should be documented, reviewed and updated at least annually to ensure alignment with evolving cloud security landscape and to reflect changes in cloud technology, regulations, and risks\n",
        "Implementation Guidelines_CSC": "Control Ownership Rationale.\nThe CSC is responsible for implementing policies, procedures, processes, and standards that support interoperability and portability with data formats, development languages, design patterns, and architectural requirements for cloud deployments. To avoid vendor lock-in, interoperability and portability should factor into the vendor selection process, continuous vendor audits, and exit planning. \n\nImplementation Guidelines.\nPortability and interoperability combine to provide compatibility of cloud solutions. They are important considerations for cloud planning because together they ensure that cloud solutions continue to operate (through interoperability) and do so unchanged (through portability). When portability and interoperability between components is not addressed, unanticipated processing failures will likely result with associated costly disruption of business.\n\nInteroperability impacts often arise within cloud computing when changing business needs drive the need for changing a service provider. While a system may be functioning to specifications with one CSP, it may not with a new provider. Lack of insight can lead to being locked to one cloud service provider. Inevitable business decisions will result in changes over time that may lead to a change in provider (e.g., due to a need to migrate providers or platforms, desiring a different feature set, complete loss of the provider, or a legal dispute).\n\nThe CSC should review the CSP's independent audit reports and documentation during the procurement process as well as throughout the period of contractual engagement. The CSC should ensure ongoing data risk assessments are carried out in support of interoperability and portability, and that internal policies and procedures are reviewed and updated to reflect any changes. \n\nIaaS Customer:\nVarious factors that the CSC should consider when developing policies and procedures with respect to portability and interoperability are:\na. understand how virtual machine images can be captured and ported to new CSPs that may use different virtualization technologies, e.g., Distributed Management Task Force (DMTF) or Open Virtualization format (OVF)\nb. identify and eliminate (or at least document) any provider-specific extensions to the virtual machine environment\nc. understand what practices are in place to make sure appropriate de-provisioning of VM images occurs after an application is ported from the CSP\nd. understand hardware- and platform-based dependencies that need to be identified before migration of the application/data\ne. identify options to resume or extend service with the legacy CSP in part or in whole if new service proves to be inferior\nf. determine if there are any management-level functions, interfaces, or APIs being used that are incompatible with or unimplemented by the new provider. \n\nPaaS Customer:\nVarious factors that the CSC should consider when developing policies and procedures with respect to portability and interoperability are:\na. when possible, use platform components with a standard syntax, open APIs, and open standards, e.g., Open Cloud Computing Interface (OCCI)\nb. understand what tools are available for secure data transfer, backup, and restore\nc. understand and document application components and modules specific to the PaaS provider, and develop application architecture with layers of abstraction to minimize direct access to proprietary modules\nd. when migrating to a new platform, understand the impacts on performance and availability of the application, and how these impacts will be measured\ne. understand how application testing will be completed prior to and after migration, to verify that the services or applications are operating correctly. Ensure that both provider and user responsibilities for testing are well known and documented\n\nSaaS Customer:\nVarious factors that the CSC should consider when developing policies and procedures with respect to portability and interoperability are:\na. assure the possibility of migration of backups and other copies of logs, access records, and any other pertinent information which may be required for legal and compliance reasons\nb. perform regular data extractions and backups to a format that is usable without the SaaS provider. Understand whether metadata can be preserved and migrated. If possible use data escrow services.\nc. store unstructured data in an established portable format such as the interoperable ZIP format for both reduced storage and transfer requirements. Aggregate files into ZIP archives to reduce complexities of moving sets of multiple files\nd. ensure the storage format selected interoperates regardless of the underlying platform. Data may need to be accessible from mobile, to desktop, to mainframe\ne. understand whether any custom tools being implemented will have to be redeveloped, or the new vendor can provide those tools\nf. understand management, monitoring, and reporting interfaces and their integration between environments\ng. assure there exists a provision for the new vendor to test and evaluate the applications before migration\n\nPolicies should include (but not limited to) provisions on the following: \na. ensure that the CSPs expose common and/or open interfaces to access all cloud functions in their cloud service offering\nb. ensure the ability to federate with different CSPs to enable higher levels of scalability\nc. plan to estimate costs involved for moving data to and from a CSP \nd. understand differences in security policy or controls, key management, and data protection between CSPs to avoid open undiscovered security gaps when moving to a new provider or platform\ne. assure security and privacy controls implementation effectiveness across old and new providers\nf. understand differences from a legal, regulatory, compliance, and operational perspective between CSPs. If the customer data and applications have strict compliance and privacy requirements, a new cloud vendor should be evaluated for those requirements before a decision to migrate is made\ng. understand how base services like monitoring, logging, and auditing would transfer over to a new vendor\nh. data integrity measures should be incorporated to ensure data remains unaltered while in the cloud (e.g., use watermarks, digital signing)\ni. use interoperable data compression for data moved to and from the cloud to reduce the volume of data being moved, and to reduce the time required to move\nj. use interoperable encryption such as that available through published specifications (e.g., OpenPGP, ZIP) that directly and persistently protect data and files regardless of the platform, storage systems, or location where it resides\nk. encrypt data before placing it in the cloud to avoid risks from multi-tenancy, or careless or disgruntled staff at the CSP\nl. understand who maintains access to data encryption keys, and retain control of all encryption keys as required by the encryption and key management policy\n",
        "Auditing Guidelines_Auditing Guidelines": "1. Examine policy for adequacy, currency, communication, and effectiveness.\n2. Examine the inventory of  documentation that establishes the requirements and communication of this control.\n3. Examine policy and procedures for evidence of review at least annually.\n"
    },
    {
        "Control Domain": "Interoperability & Portability",
        "Control Title": "Application Interface Availability",
        "Control ID": "IPY-02",
        "CCM_Control Specification": "Provide application interface(s) to CSCs so that they programmatically\nretrieve their data to enable interoperability and portability.\n",
        "Implementation Guidelines_CCM Implementation Guidelines v2.0 CSP": "Control Ownership Rationale.\nThe CSP is responsible for providing the CSC with secure APIs that utilize universally recognized and standardized guidelines and protocols that are tested for security, availability, and usability. The CSP should make documentation available to the CSC.\n\nImplementation Guidelines.\nApplicable to all service models:\nThe CSP should ensure that its APIs are interoperable and facilitate the secure migration of applications and data between environments. \n\nThe APIs should be secure by design and in accordance with standardized guidelines and protocols universally recognized to enable the CSC to use for distributed cloud deployments, and to remove data securely from the environment. \n\nThe CSP should provide the CSC with accurate documentation and communicate planned changes and updates. Documentation should support API functionality, be updated regularly, and given to customers with new API versions. Furthermore, security issues should be considered during development and updates.\n",
        "Implementation Guidelines_CSC": "Control Ownership Rationale.\nThe CSC is responsible for understanding the APIs available, their security, the interoperability of the standards, complexity that may result in vendor lock-in, and the costs associated with data transfers or recovery. \n\nImplementation Guidelines.\nApplicable to all service models:\nThe CSC has various methods to interact with cloud services in the form of APIs. Important standards and technologies emerging for portability and interoperability for the CSPs (e.g., OCCI, OVF) are supported by the majority of CSPs. Different platform providers offer different cloud application frameworks, and differences exist that affect API compatibility and interoperability. \n\nWhere the CSC relies on CSP-provided APIs to retrieve their data, the CSC is responsible for configuration in alignment with CSP guidelines (also with respect to relevant sources such as OWASP), documenting deployments, and testing data and metadata transfer and recovery capabilities during implementation and through exit planning activities.\n\nThe CSC should review the CSP's documentation, independent audit reports, and security testing. It is responsible for monitoring resources made available by the CSP to inform customers of API outages, changes, and vulnerability alerts that may impact service or require action by the CSC. \n\nThe CSC is responsible for ensuring that the infrastructure deployed within the cloud uses open standards, either provided by the CSP or within their deployments, to enable interoperability and portability. The CSC should ensure that the CSP exposes common and/or open interfaces to access all cloud functions.\n\nThe CSC should take into account the following guidelines for ensuring API interoperability and portability:\na. monitor the resources provided by the CSP to be aware of outages and changes that may impact the service. Where the CSC relies on the CSP's APIs to transfer data from storage, it should test them during implementation and through business continuity or exit plan testing activities\nb. applications in the cloud interoperate over the Internet and outages can be anticipated. The CSC should determine how failure in one component will impact others, and avoid stateful dependencies that may risk system data integrity when a remote component fails\nc. when possible, use platform components with  standardized syntax, open APIs, and open standards (e.g., OCCI)\nd. ensure APIs documentation remains current and accurate\ne. investigate the APIs to determine where differences lie, and plan for changes necessary that may be required for application processing when moving to a new provider\nf. use open and published APIs to ensure the broadest support for interoperability between components, and to facilitate migrating applications and data, should changing CSPs become necessary\ng. avoid CSPs that supply undocumented/proprietary APIs\nh. determine if there are any management-level functions (e.g., VM image management, virtual network management, VM management, storage management), interfaces, or APIs being used that are incompatible with or unimplemented by the new provider\ni. review APIs documentation and test results during the CSP selection process\nj.factor in data transfer costs when considering interoperability, portability, and exit planning requirements\n",
        "Auditing Guidelines_Auditing Guidelines": "1. Examine the list of Application Programming Interfaces (API) available to Cloud Service Consumers.\n2. Determine if such list and usable documentation is made available to Cloud Service Consumers.\n"
    },
    {
        "Control Domain": "Interoperability & Portability",
        "Control Title": "Secure Interoperability and Portability Management",
        "Control ID": "IPY-03",
        "CCM_Control Specification": "Implement cryptographically secure and standardized network protocols\nfor the management, import and export of data.\n",
        "Implementation Guidelines_CCM Implementation Guidelines v2.0 CSP": "Control Ownership Rationale.\nThe CSP is responsible for encrypting communications using industry-standard protocols and encryption algorithms. The CSP should make design and configuration documentation available to the CSC.\n\nImplementation Guidelines.\nApplicable to all service models:\nThe CSP is responsible for the secure configuration, monitoring, certificate renewal, and key management for all APIs within their control. The CSP should comply with applicable regulatory mandates.\n\nThe CSP should provide the CSC with accurate documentation, communicate planned changes and updates, and make independent security audit results available. When vulnerabilities are detected, the CSP should alert the CSC of the issue, provide status updates, and mitigation provide advice as applicable. \n",
        "Implementation Guidelines_CSC": "Control Ownership Rationale.\nThe control ownership rationale provided for the CSP applies.\n\nImplementation Guidelines.\nApplicable to all service models:\nThe most important way to protect sensitive data in the cloud is through encryption. Not all information used within a cloud system may qualify as confidential or fall under regulations requiring protection. The CSC should assess and classify data and avoid the additional work of encryption and key management if the nature of the data does not warrant it.\n\nThe CSC should protect its network traffic during import and export of data using encryption (both in transit and at rest) based on established industry standardized protocols (e.g., TLS, IPsec) and encryption algorithms (e.g., AES) to reduce the risk of data tampering or loss. The CSC should use TLS for all interactions with the CSP's APIs and Management Console via HTTPS (TLS) protected endpoints, which provide server authentication. \n\nThe CSC should take into account the following guidelines when using encryption to import/export their data:\na. encrypt data before it is placed into the cloud to ensure that it cannot be accessed inappropriately\nb. not rely on an encryption algorithm or a secure network protocol (or deprecated/insecure versions) that have not undergone industry scrutiny\nc. ensure the CSP's security services adhere to the same regulatory mandates to which the CSP should conform\nd. use interoperable encryption such as that available through published specifications such as ZIP or OpenPGP that directly and persistently protect data and files regardless of the platform, storage systems, or location where it resides\ne. avoid losing control of encrypted data by holding the keys and avoid trusting them to third parties, even if that third party is a CSP. Only the key holders can access the data\nf. If keys are provided by the CSP, the CSC should make sure it understands what these keys protect (e.g., data or other keys)\ng. the CSC should understand which CSP staff have access to encryption keys, and under what conditions\nh. the CSC should understand its responsibilities and liabilities should a compromise occur due to unanticipated gaps in protection methods offered by the CSP\ni. if password encryption is used, the CSC should determine if  stronger means,  such as a public/private key, may be required to avoid difficulties of sharing a password\n",
        "Auditing Guidelines_Auditing Guidelines": "1. Examine the policy for the secure transmission of requests and data.\n2. Inspect the requirements, with respect to any security domains defined.\n3. Examine the policy that specifies protocols for transmission, with respect to standardization.\n"
    },
    {
        "Control Domain": "Interoperability & Portability",
        "Control Title": "Data Portability Contractual Obligations",
        "Control ID": "IPY-04",
        "CCM_Control Specification": "Agreements must include provisions specifying CSCs access to data\nupon contract termination and will include:\na. Data format\nb. Length of time the data will be stored\nc. Scope of the data retained and made available to the CSCs\nd. Data deletion policy\n",
        "Implementation Guidelines_CCM Implementation Guidelines v2.0 CSP": "Control Ownership Rationale.\nThe CSP should provide information relating to data lifecycle management, including but not limited to, data formats, data retention, data archival, and data deletion during the service agreement, and when the CSC exits the Cloud service. The CSP will provide information to assist the CSC in data and metadata recovery, along with how and when the CSP will delete the CSC's data. Control implementation responsibility is determined to be both\" Shared\" and \"Dependent\" since In context of service level agreements both parties need to determine and agree on provisions with regards to data portability upon contract termination.\n\nImplementation Guidelines.\nApplicable to all service models:\nThe CSP should document the data and metadata formats and retention timelines when the CSC enters and exits the service. Transient data or data not retained should be declared. \n\nThe CSP should publish and maintain detailed instructions to assist the CSP in securely removing data and metadata from the environment when exiting the service. \n\nIndependent audits should cover processes supporting customer exit, and reports made available to the CSC.\n",
        "Implementation Guidelines_CSC": "Control Ownership Rationale.\nThe CSC should consider exit planning and processes during the CSP supplier selection and ongoing due diligence. The CSC should understand data and metadata formats, retention, the means to recover data upon exiting the service, and the costs involved.\n\nImplementation Guidelines.\nApplicable to all service models:\nThe CSC should maintain and test exit plans. At a minimum, this should include recovery of data and metadata, deletion within the application and associated storage and backups, and may include deletion of encryption keys. Exit plans may extend to the transfer of configuration, code, images, and decommissioning of environments.\n\nThe CSC should review supplier documentation and independent audit reports provided by the CSP and monitor for changes to ensure exit plans remain accurate. The CSC should ensure retention requirements continue to align with policy and regulatory or contractual commitments. and take appropriate action should this change.\n",
        "Auditing Guidelines_Auditing Guidelines": "1. Examine the standard form of contract for offboarding the Cloud Service Consumers.\n2. Determine if non-standard clauses allow the Cloud Service Consumers to waive such rights.\n3. Determine if there are requests for data in unsupported formats.\n4. Examine the policy regarding deletion of resources no longer in the control of a client, and determine if such policy corresponds to the contractual data retention.\n"
    }
]